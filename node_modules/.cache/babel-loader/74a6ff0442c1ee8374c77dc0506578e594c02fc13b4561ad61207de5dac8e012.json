{"ast":null,"code":"var _jsxFileName = \"/Users/matrix/Desktop/TEDx2025/NEW REPO/TEDxTIET2025/src/Components/infiniteGallery.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./infiniteGallery.css\";\n\n// Each column has its own set of images\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columnImageSets = [[\"/Sponsors2/16.png.jpeg\", \"/Sponsors2/13.jpg\", \"/Sponsors2/14.png.jpeg\"], [\"/Sponsors2/15.png.jpeg\", \"/Sponsors2/17.jpeg\", \"/Sponsors2/18.png.jpeg\"], [\"/Sponsors2/20.png.jpeg\", \"/Sponsors2/20.jpg\", \"/Sponsors2/22.png.jpeg\"]];\nexport default function InfiniteGallery() {\n  _s();\n  const containerRef = useRef(null);\n  const touchStartRef = useRef({\n    x: null,\n    y: null\n  });\n  const activeColRef = useRef(0);\n  const [isMobile, setIsMobile] = useState(false);\n  const [offsets, setOffsets] = useState([0]); // at least one column\n\n  // Detect screen size\n  useEffect(() => {\n    const checkSize = () => {\n      setIsMobile(window.innerWidth < 640); // Tailwind \"md\" breakpoint\n    };\n    checkSize();\n    window.addEventListener(\"resize\", checkSize);\n    return () => window.removeEventListener(\"resize\", checkSize);\n  }, []);\n\n  // Prevent page scroll while gallery is mounted\n  useEffect(() => {\n    const originalOverflow = document.body.style.overflow;\n    document.body.style.overflow = \"hidden\";\n    return () => {\n      document.body.style.overflow = originalOverflow;\n    };\n  }, []);\n\n  // Layout constants\n  const imageHeight = 288; // 18rem equivalent\n  const gap = 32; // 2rem equivalent\n  const totalItemHeight = imageHeight + gap;\n  const viewportHeight = typeof window !== \"undefined\" ? window.innerHeight : 800;\n\n  // Build column arrays\n  const basePerColumnCount = Math.max(4, Math.ceil(viewportHeight / totalItemHeight) + 2);\n  const baseColumns = (() => {\n    if (isMobile) {\n      // Merge all into one big column\n      const allImgs = columnImageSets.flat();\n      const repeated = [];\n      for (let i = 0; i < basePerColumnCount; i++) {\n        repeated.push(allImgs[i % allImgs.length]);\n      }\n      return [repeated];\n    } else {\n      // Normal multi-column\n      return columnImageSets.map(columnImages => {\n        const repeated = [];\n        for (let i = 0; i < basePerColumnCount; i++) {\n          repeated.push(columnImages[i % columnImages.length]);\n        }\n        return repeated;\n      });\n    }\n  })();\n\n  // Sync offsets when switching mobile/desktop\n  useEffect(() => {\n    setOffsets(Array.from({\n      length: baseColumns.length\n    }, () => 0));\n  }, [isMobile, baseColumns.length]);\n\n  // --- Active column helpers ---\n  const getActiveColumnFromX = x => {\n    const el = containerRef.current;\n    if (!el) return activeColRef.current;\n    const rect = el.getBoundingClientRect();\n    const relX = Math.min(Math.max(x - rect.left, 0), rect.width - 1);\n    const widthPerCol = rect.width / baseColumns.length;\n    return Math.min(baseColumns.length - 1, Math.max(0, Math.floor(relX / widthPerCol)));\n  };\n  const applyDelta = deltaY => {\n    setOffsets(prev => prev.map((off, i) => {\n      const dist = Math.abs(i - activeColRef.current);\n      const factor = isMobile ? 1 : Math.max(0.3, 1 - 0.4 * dist); // full scroll on mobile\n      return off + deltaY * factor;\n    }));\n  };\n\n  // --- Event handlers ---\n  const onWheel = event => {\n    event.preventDefault();\n    activeColRef.current = getActiveColumnFromX(event.clientX);\n    applyDelta(event.deltaY);\n  };\n  const onMouseMove = event => {\n    if (!isMobile) {\n      activeColRef.current = getActiveColumnFromX(event.clientX);\n    }\n  };\n  const onTouchStart = event => {\n    const t = event.touches[0];\n    touchStartRef.current = {\n      x: t.clientX,\n      y: t.clientY\n    };\n    activeColRef.current = getActiveColumnFromX(t.clientX);\n  };\n  const onTouchMove = event => {\n    const t = event.touches[0];\n    const start = touchStartRef.current;\n    if (!start || start.y == null) return;\n    const deltaY = start.y - t.clientY;\n    activeColRef.current = getActiveColumnFromX(t.clientX);\n    applyDelta(deltaY);\n    touchStartRef.current = {\n      x: t.clientX,\n      y: t.clientY\n    };\n  };\n  const onTouchEnd = () => {\n    touchStartRef.current = {\n      x: null,\n      y: null\n    };\n  };\n\n  // --- Tilt + gap correction ---\n  const tiltDeg = isMobile ? 0 : -2.5;\n  const tiltRad = Math.PI / 180 * Math.abs(tiltDeg);\n  const desiredGap = 24; // px (1.5rem equivalent)\n  const adjustedGap = desiredGap / Math.cos(tiltRad);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"gallery-container\",\n    onWheel: onWheel,\n    onMouseMove: onMouseMove,\n    onTouchStart: onTouchStart,\n    onTouchMove: onTouchMove,\n    onTouchEnd: onTouchEnd,\n    style: {\n      touchAction: \"none\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-content\",\n      style: {\n        gap: `${adjustedGap}px`,\n        transform: `rotate(${tiltDeg}deg)`,\n        transformOrigin: \"center center\"\n      },\n      children: baseColumns.map((colImgs, colIdx) => {\n        const columnHeight = colImgs.length * totalItemHeight;\n        const raw = offsets[colIdx];\n        const offset = (raw % columnHeight + columnHeight) % columnHeight;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gallery-column\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-column-content\",\n            style: {\n              transform: `translateY(${-offset}px)`\n            },\n            children: [...colImgs, ...colImgs].map((src, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gallery-item\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: src,\n                alt: \"\",\n                className: \"gallery-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)\n        }, colIdx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(InfiniteGallery, \"i+gDEzxrekVSKdCSHpbD4upjLO0=\");\n_c = InfiniteGallery;\nvar _c;\n$RefreshReg$(_c, \"InfiniteGallery\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","columnImageSets","InfiniteGallery","_s","containerRef","touchStartRef","x","y","activeColRef","isMobile","setIsMobile","offsets","setOffsets","checkSize","window","innerWidth","addEventListener","removeEventListener","originalOverflow","document","body","style","overflow","imageHeight","gap","totalItemHeight","viewportHeight","innerHeight","basePerColumnCount","Math","max","ceil","baseColumns","allImgs","flat","repeated","i","push","length","map","columnImages","Array","from","getActiveColumnFromX","el","current","rect","getBoundingClientRect","relX","min","left","width","widthPerCol","floor","applyDelta","deltaY","prev","off","dist","abs","factor","onWheel","event","preventDefault","clientX","onMouseMove","onTouchStart","t","touches","clientY","onTouchMove","start","onTouchEnd","tiltDeg","tiltRad","PI","desiredGap","adjustedGap","cos","ref","className","touchAction","children","transform","transformOrigin","colImgs","colIdx","columnHeight","raw","offset","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/matrix/Desktop/TEDx2025/NEW REPO/TEDxTIET2025/src/Components/infiniteGallery.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"./infiniteGallery.css\";\n\n// Each column has its own set of images\nconst columnImageSets = [\n  [\"/Sponsors2/16.png.jpeg\", \"/Sponsors2/13.jpg\", \"/Sponsors2/14.png.jpeg\"],\n  [\"/Sponsors2/15.png.jpeg\", \"/Sponsors2/17.jpeg\", \"/Sponsors2/18.png.jpeg\"],\n  [\"/Sponsors2/20.png.jpeg\", \"/Sponsors2/20.jpg\", \"/Sponsors2/22.png.jpeg\"],\n];\n\nexport default function InfiniteGallery() {\n  const containerRef = useRef(null);\n  const touchStartRef = useRef({ x: null, y: null });\n  const activeColRef = useRef(0);\n\n  const [isMobile, setIsMobile] = useState(false);\n  const [offsets, setOffsets] = useState([0]); // at least one column\n\n  // Detect screen size\n  useEffect(() => {\n    const checkSize = () => {\n      setIsMobile(window.innerWidth < 640); // Tailwind \"md\" breakpoint\n    };\n    checkSize();\n    window.addEventListener(\"resize\", checkSize);\n    return () => window.removeEventListener(\"resize\", checkSize);\n  }, []);\n\n  // Prevent page scroll while gallery is mounted\n  useEffect(() => {\n    const originalOverflow = document.body.style.overflow;\n    document.body.style.overflow = \"hidden\";\n    return () => {\n      document.body.style.overflow = originalOverflow;\n    };\n  }, []);\n\n  // Layout constants\n  const imageHeight = 288; // 18rem equivalent\n  const gap = 32; // 2rem equivalent\n  const totalItemHeight = imageHeight + gap;\n  const viewportHeight = typeof window !== \"undefined\" ? window.innerHeight : 800;\n\n  // Build column arrays\n  const basePerColumnCount = Math.max(\n    4,\n    Math.ceil(viewportHeight / totalItemHeight) + 2\n  );\n\n  const baseColumns = (() => {\n    if (isMobile) {\n      // Merge all into one big column\n      const allImgs = columnImageSets.flat();\n      const repeated = [];\n      for (let i = 0; i < basePerColumnCount; i++) {\n        repeated.push(allImgs[i % allImgs.length]);\n      }\n      return [repeated];\n    } else {\n      // Normal multi-column\n      return columnImageSets.map((columnImages) => {\n        const repeated = [];\n        for (let i = 0; i < basePerColumnCount; i++) {\n          repeated.push(columnImages[i % columnImages.length]);\n        }\n        return repeated;\n      });\n    }\n  })();\n\n  // Sync offsets when switching mobile/desktop\n  useEffect(() => {\n    setOffsets(Array.from({ length: baseColumns.length }, () => 0));\n  }, [isMobile, baseColumns.length]);\n\n  // --- Active column helpers ---\n  const getActiveColumnFromX = (x) => {\n    const el = containerRef.current;\n    if (!el) return activeColRef.current;\n    const rect = el.getBoundingClientRect();\n    const relX = Math.min(Math.max(x - rect.left, 0), rect.width - 1);\n    const widthPerCol = rect.width / baseColumns.length;\n    return Math.min(\n      baseColumns.length - 1,\n      Math.max(0, Math.floor(relX / widthPerCol))\n    );\n  };\n\n  const applyDelta = (deltaY) => {\n    setOffsets((prev) =>\n      prev.map((off, i) => {\n        const dist = Math.abs(i - activeColRef.current);\n        const factor = isMobile ? 1 : Math.max(0.3, 1 - 0.4 * dist); // full scroll on mobile\n        return off + deltaY * factor;\n      })\n    );\n  };\n\n  // --- Event handlers ---\n  const onWheel = (event) => {\n    event.preventDefault();\n    activeColRef.current = getActiveColumnFromX(event.clientX);\n    applyDelta(event.deltaY);\n  };\n\n  const onMouseMove = (event) => {\n    if (!isMobile) {\n      activeColRef.current = getActiveColumnFromX(event.clientX);\n    }\n  };\n\n  const onTouchStart = (event) => {\n    const t = event.touches[0];\n    touchStartRef.current = { x: t.clientX, y: t.clientY };\n    activeColRef.current = getActiveColumnFromX(t.clientX);\n  };\n\n  const onTouchMove = (event) => {\n    const t = event.touches[0];\n    const start = touchStartRef.current;\n    if (!start || start.y == null) return;\n    const deltaY = start.y - t.clientY;\n    activeColRef.current = getActiveColumnFromX(t.clientX);\n    applyDelta(deltaY);\n    touchStartRef.current = { x: t.clientX, y: t.clientY };\n  };\n\n  const onTouchEnd = () => {\n    touchStartRef.current = { x: null, y: null };\n  };\n\n  // --- Tilt + gap correction ---\n  const tiltDeg = isMobile ? 0 : -2.5;\n  const tiltRad = (Math.PI / 180) * Math.abs(tiltDeg);\n  const desiredGap = 24; // px (1.5rem equivalent)\n  const adjustedGap = desiredGap / Math.cos(tiltRad);\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"gallery-container\"\n      onWheel={onWheel}\n      onMouseMove={onMouseMove}\n      onTouchStart={onTouchStart}\n      onTouchMove={onTouchMove}\n      onTouchEnd={onTouchEnd}\n      style={{ touchAction: \"none\" }}\n    >\n      <div\n        className=\"gallery-content\"\n        style={{\n          gap: `${adjustedGap}px`,\n          transform: `rotate(${tiltDeg}deg)`,\n          transformOrigin: \"center center\",\n        }}\n      >\n        {baseColumns.map((colImgs, colIdx) => {\n          const columnHeight = colImgs.length * totalItemHeight;\n          const raw = offsets[colIdx];\n          const offset = ((raw % columnHeight) + columnHeight) % columnHeight;\n\n          return (\n            <div key={colIdx} className=\"gallery-column\">\n              <div\n                className=\"gallery-column-content\"\n                style={{ transform: `translateY(${-offset}px)` }}\n              >\n                {[...colImgs, ...colImgs].map((src, i) => (\n                  <div\n                    key={i}\n                    className=\"gallery-item\"\n                  >\n                    <img\n                      src={src}\n                      alt=\"\"\n                      className=\"gallery-image\"\n                    />\n                  </div>\n                ))}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}