{"ast":null,"code":"var _jsxFileName = \"/Users/matrix/Desktop/TEDx2025/NEW REPO/TEDxTIET2025/src/Components/AnimatedCounter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedCounter = ({\n  targetNumber,\n  duration = 2000\n}) => {\n  _s();\n  const [count, setCount] = useState(0);\n  const [hasAnimated, setHasAnimated] = useState(false);\n  const elementRef = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting && !hasAnimated) {\n        setHasAnimated(true);\n        animateCounter();\n      }\n    }, {\n      threshold: 0.5\n    });\n    if (elementRef.current) {\n      observer.observe(elementRef.current);\n    }\n    return () => observer.disconnect();\n  }, [hasAnimated]);\n  const animateCounter = () => {\n    const startTime = Date.now();\n    const endTime = startTime + duration;\n    const updateCounter = () => {\n      const now = Date.now();\n      const progress = Math.min((now - startTime) / duration, 1);\n      const easeOutCubic = 1 - Math.pow(1 - progress, 3);\n      const currentValue = Math.floor(targetNumber * easeOutCubic);\n      setCount(currentValue);\n      if (now < endTime) {\n        requestAnimationFrame(updateCounter);\n      }\n    };\n    requestAnimationFrame(updateCounter);\n  };\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    ref: elementRef,\n    style: {\n      display: 'inline-block'\n    },\n    children: count.toLocaleString()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimatedCounter, \"0oDU9g6l35AIZIfrVp78OPFgk5A=\");\n_c = AnimatedCounter;\nexport default AnimatedCounter;\nvar _c;\n$RefreshReg$(_c, \"AnimatedCounter\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","AnimatedCounter","targetNumber","duration","_s","count","setCount","hasAnimated","setHasAnimated","elementRef","observer","IntersectionObserver","entry","isIntersecting","animateCounter","threshold","current","observe","disconnect","startTime","Date","now","endTime","updateCounter","progress","Math","min","easeOutCubic","pow","currentValue","floor","requestAnimationFrame","ref","style","display","children","toLocaleString","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/matrix/Desktop/TEDx2025/NEW REPO/TEDxTIET2025/src/Components/AnimatedCounter.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst AnimatedCounter = ({ targetNumber, duration = 2000 }) => {\n  const [count, setCount] = useState(0);\n  const [hasAnimated, setHasAnimated] = useState(false);\n  const elementRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting && !hasAnimated) {\n          setHasAnimated(true);\n          animateCounter();\n        }\n      },\n      { threshold: 0.5 }\n    );\n\n    if (elementRef.current) {\n      observer.observe(elementRef.current);\n    }\n\n    return () => observer.disconnect();\n  }, [hasAnimated]);\n\n  const animateCounter = () => {\n    const startTime = Date.now();\n    const endTime = startTime + duration;\n\n    const updateCounter = () => {\n      const now = Date.now();\n      const progress = Math.min((now - startTime) / duration, 1);\n\n      const easeOutCubic = 1 - Math.pow(1 - progress, 3);\n      const currentValue = Math.floor(targetNumber * easeOutCubic);\n\n      setCount(currentValue);\n\n      if (now < endTime) {\n        requestAnimationFrame(updateCounter);\n      }\n    };\n\n    requestAnimationFrame(updateCounter);\n  };\n\n  return (\n    <span ref={elementRef} style={{ display: 'inline-block' }}>\n      {count.toLocaleString()}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,eAAe,GAAGA,CAAC;EAAEC,YAAY;EAAEC,QAAQ,GAAG;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMa,UAAU,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACd,MAAMa,QAAQ,GAAG,IAAIC,oBAAoB,CACvC,CAAC,CAACC,KAAK,CAAC,KAAK;MACX,IAAIA,KAAK,CAACC,cAAc,IAAI,CAACN,WAAW,EAAE;QACxCC,cAAc,CAAC,IAAI,CAAC;QACpBM,cAAc,CAAC,CAAC;MAClB;IACF,CAAC,EACD;MAAEC,SAAS,EAAE;IAAI,CACnB,CAAC;IAED,IAAIN,UAAU,CAACO,OAAO,EAAE;MACtBN,QAAQ,CAACO,OAAO,CAACR,UAAU,CAACO,OAAO,CAAC;IACtC;IAEA,OAAO,MAAMN,QAAQ,CAACQ,UAAU,CAAC,CAAC;EACpC,CAAC,EAAE,CAACX,WAAW,CAAC,CAAC;EAEjB,MAAMO,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMK,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAC5B,MAAMC,OAAO,GAAGH,SAAS,GAAGhB,QAAQ;IAEpC,MAAMoB,aAAa,GAAGA,CAAA,KAAM;MAC1B,MAAMF,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;MACtB,MAAMG,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,CAACL,GAAG,GAAGF,SAAS,IAAIhB,QAAQ,EAAE,CAAC,CAAC;MAE1D,MAAMwB,YAAY,GAAG,CAAC,GAAGF,IAAI,CAACG,GAAG,CAAC,CAAC,GAAGJ,QAAQ,EAAE,CAAC,CAAC;MAClD,MAAMK,YAAY,GAAGJ,IAAI,CAACK,KAAK,CAAC5B,YAAY,GAAGyB,YAAY,CAAC;MAE5DrB,QAAQ,CAACuB,YAAY,CAAC;MAEtB,IAAIR,GAAG,GAAGC,OAAO,EAAE;QACjBS,qBAAqB,CAACR,aAAa,CAAC;MACtC;IACF,CAAC;IAEDQ,qBAAqB,CAACR,aAAa,CAAC;EACtC,CAAC;EAED,oBACEvB,OAAA;IAAMgC,GAAG,EAAEvB,UAAW;IAACwB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAe,CAAE;IAAAC,QAAA,EACvD9B,KAAK,CAAC+B,cAAc,CAAC;EAAC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEX,CAAC;AAACpC,EAAA,CAjDIH,eAAe;AAAAwC,EAAA,GAAfxC,eAAe;AAmDrB,eAAeA,eAAe;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}